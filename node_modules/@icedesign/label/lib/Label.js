"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var IceLabel =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(IceLabel, _PureComponent);

  function IceLabel() {
    (0, _classCallCheck2.default)(this, IceLabel);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IceLabel).apply(this, arguments));
  }

  (0, _createClass2.default)(IceLabel, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          style = _this$props.style,
          className = _this$props.className,
          status = _this$props.status,
          children = _this$props.children,
          inverse = _this$props.inverse;
      return _react.default.createElement("span", {
        style: style,
        className: "ice-label ice-label-".concat(status, " ").concat(!inverse ? 'ice-label-no-inverse' : '', " ").concat(className)
      }, children);
    }
  }]);
  return IceLabel;
}(_react.PureComponent);

exports.default = IceLabel;
IceLabel.displayName = 'IceLabel';
IceLabel.propTypes = {
  /**
   * 当前要表达的状态
   */
  status: _propTypes.default.oneOf(['default', 'primary', 'success', 'info', 'warning', 'danger']),
  className: _propTypes.default.string,
  style: _propTypes.default.object,

  /**
   * 是否反转颜色
   */
  inverse: _propTypes.default.bool
};
IceLabel.defaultProps = {
  inverse: true,
  status: 'default',
  className: '',
  style: {}
};