"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _AsideTrigger = _interopRequireDefault(require("./AsideTrigger"));

var IceLayoutAside =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(IceLayoutAside, _Component);

  function IceLayoutAside(props) {
    var _this;

    (0, _classCallCheck2.default)(this, IceLayoutAside);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IceLayoutAside).call(this, props));

    _this.handleTriggerClick = function (collapsed) {
      _this.setState({
        collapsed: collapsed
      });

      if (typeof _this.props.onCollapseChange === 'function') {
        _this.props.onCollapseChange(collapsed);
      }
    };

    _this.state = {
      collapsed: props.collapsed
    };
    return _this;
  }

  (0, _createClass2.default)(IceLayoutAside, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if ('collapsed' in nextProps) {
        if (nextProps.collapsed !== this.props.collapsed) {
          this.setState({
            collapsed: nextProps.collapsed
          });
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          className = _this$props.className,
          collapsedWidth = _this$props.collapsedWidth,
          scrollable = _this$props.scrollable,
          style = _this$props.style,
          theme = _this$props.theme,
          trigger = _this$props.trigger,
          width = _this$props.width,
          onCollapseChange = _this$props.onCollapseChange,
          collapsed = _this$props.collapsed,
          others = (0, _objectWithoutProperties2.default)(_this$props, ["children", "className", "collapsedWidth", "scrollable", "style", "theme", "trigger", "width", "onCollapseChange", "collapsed"]);
      var classes = (0, _classnames.default)('ice-layout-aside', (0, _defineProperty2.default)({
        'ice-layout-scrollable': scrollable,
        'ice-layout-aside-has-trigger': trigger === true
      }, "ice-layout-theme-".concat(theme), theme), className);
      var widthValue = typeof width === 'number' ? "".concat(width, "px") : width;
      var collapsedWidthValue = typeof collapsedWidth === 'number' ? "".concat(collapsedWidth, "px") : collapsedWidth;
      var asideStyle = (0, _objectSpread2.default)({}, style, {
        flex: "0 0 ".concat(this.state.collapsed ? collapsedWidthValue : widthValue),
        width: "".concat(this.state.collapsed ? collapsedWidthValue : widthValue)
      });
      return _react.default.createElement("div", (0, _extends2.default)({}, others, {
        className: classes,
        style: asideStyle
      }), children, trigger === true && _react.default.createElement(_AsideTrigger.default, {
        onClick: this.handleTriggerClick,
        collapsed: this.state.collapsed
      }));
    }
  }]);
  return IceLayoutAside;
}(_react.Component);

exports.default = IceLayoutAside;
IceLayoutAside.displayName = 'IceLayoutAside';
IceLayoutAside.propTypes = {
  /**
   * 是否收起
   */
  collapsed: _propTypes.default.bool,

  /**
   * 可滚动
   * @description Layout 开启 fixable 后有效
   */
  scrollable: _propTypes.default.bool,

  /**
   * 收起后的宽度
   */
  collapsedWidth: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),

  /**
   * collapsed 收起状态切换
   * @params {Boolean} 切换后的状态
   */
  onCollapseChange: _propTypes.default.func,

  /**
   * 展示默认 trigger
   */
  trigger: _propTypes.default.bool,

  /**
   * 宽度
   */
  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),

  /**
   * 主题
   */
  theme: _propTypes.default.oneOf(['dark', 'light'])
};
IceLayoutAside.defaultProps = {
  theme: 'light',
  collapsed: undefined,
  collapsedWidth: 80,
  onCollapseChange: function onCollapseChange() {},
  scrollable: false,
  trigger: false,
  width: 200
};
IceLayoutAside.Trigger = _AsideTrigger.default;