import * as React from "react";
import { AllCron, PeriodType } from "./cronUtils";
import { cronValidate } from "./cronExpValidator";
import { LangEnum } from "./I18N";
declare type disabledtype = "start" | "end";
export * from "./cronUtils";
export declare class OneCronProps {
    cronExpression?: string;
    onChange?: (exp: AllCron) => void;
    lang?: LangEnum;
    showCheckbox?: boolean;
    disabled?: boolean;
    showRecentTime?: boolean;
    /** 可配置时间粒度 */
    options?: any[];
    /** 开始时间，用于小时选择 */
    beginTime?: number;
    /** 结束时间，用于小时选择 */
    endTime?: number;
    /** 是否支持多选 */
    multiple?: boolean;
}
interface OneCronState {
    cron: AllCron;
    cronType: PeriodType;
    isEmpty: boolean;
    endOpen: boolean;
    timeList: string[];
}
export default class OneCron extends React.Component<OneCronProps, OneCronState> {
    static defaultProps: OneCronProps;
    constructor(props: OneCronProps);
    componentWillReceiveProps(nextProps: OneCronProps): void;
    handleChangePeriodType(periodType: PeriodType): void;
    triggerChange(): void;
    disabledHours: (sTime: number, eTime: number, type?: disabledtype) => number[];
    handleStartOpenChange: (open: boolean) => void;
    handleEndOpenChange: (open: boolean) => void;
    renderDetail(): JSX.Element;
    render(): JSX.Element;
}
export { cronValidate };
